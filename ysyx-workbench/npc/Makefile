# Sanity check
#ifeq ($(wildcard $(NPC_HOME)/csrc/npc-main.cpp),)
#	$(error NPC_HOME=$(NPC_HOME) is not a NPC repo)
#endif 

# Include variables and rules generated by menuconfig
-include $(NPC_HOME)/include/config/auto.conf
-include $(NPC_HOME)/include/config/auto.conf.cmd


remove_quote = $(pathsubst "%",%,$(1))

# Include all filelist.mk to merge file lists
FILELIST_MK = $(shell find -L ./csrc -name "filelist.mk")
include $(FILELIST_MK)

# Filter out directories and files in blacklist to obtain the final set of source files
DIRS-BLACKLIST-y += $(DIRS-BLACKLIST)
CSRC-BLACKLIST-y += $(CSRC-BLACKLIST) $(shell find -L $(DIRS-BLACKLIST-y) -name "*.c")
CSRCS-y += $(shell find -L $(DIRS-y) -name "*.c")
CSRCS = $(filter-out $(CSRCS-BLACKLIST-y),$(CSRCS-y))
#CSRCS += $(CXXSRC)

CC = $(call remove_quote,$(CONFIG_CC))
CFLAGS_BUILD += $(call remove_quote,$(CONFIG_CC_OPT))
#CFLAGS_BUILD += $(if $(CONFIG_CC_LTO),-flto,)
CFLAGS_BUILD += $(if $(CONFIG_CC_DEBUG),-Og -ggdb3,)
CFLAGS_BUILD += $(if $(CONFIG_CC_ASAN),-fsanitize=address,)
CFLAGS_TRACE += -DITRACE_COND=$(if $(CONFIG_ITRACE_COND),$(call remove_quote,$(CONFIG_ITRACE_COND)),true)
CFLAGS += $(CFLAGS_BUILD) $(CFLAGS_TRACE) 
LDFLAGS += $(CFLAGS_BUILD)

TOP_NAME = NPC
SIM_NAME = NPC
PRJ = playground
NXDC_FILES = constr/top.nxdc

#INC_PATH += $(DIRS-y)

#INC_PATH ?=
#INC_PATH += $(NPC_HOME)/csrc
#INC_PATH += $(NPC_HOME)/include
#INC_PATH += $(NPC_HOME)/csrc/sdb
#INC_PATH += $(NPC_HOME)/csrc/cpu
#INC_PATH += $(NPC_HOME)/csrc/utils
#INC_PATH += $(NPC_HOME)/csrc/memory
#INC_PATH += $(NPC_HOME)/csrc/device
#
#INC_PATH += $(AM_HOME)/am/include
#
#SOURCE += $(NPC_HOME)/csrc/sdb/sdb.c
#SOURCE += $(NPC_HOME)/csrc/sdb/expr.c
#SOURCE += $(NPC_HOME)/csrc/sdb/watchpoint.c
#SOURCE += $(NPC_HOME)/csrc/memory/pmem.c
#SOURCE += $(NPC_HOME)/csrc/cpu/cpu.c
#SOURCE += $(NPC_HOME)/csrc/cpu/dut.c
#SOURCE += $(NPC_HOME)/csrc/utils/time.c
#SOURCE += $(NPC_HOME)/csrc/device/map.c
#SOURCE += $(NPC_HOME)/csrc/device/device.c
#SOURCE += $(NPC_HOME)/csrc/device/mmio.c
#SOURCE += $(NPC_HOME)/csrc/device/timer.c
#SOURCE += $(NPC_HOME)/csrc/device/serial.c
#
#SOURCE += $(NPC_HOME)/csrc/utils/disasm.cc

SIM_CFLAGS += --cc --trace --exe 
CXXFLAGS += $(shell llvm-config --cxxflags) -fPIE
LIBS += $(shell llvm-config --libs)

VERILATOR = verilator
VERILATOR_CFLAGS += -MMD --build -cc  --trace\
				-O3 --x-assign fast --x-initial fast --noassert

BUILD_DIR = ./build
OBJ = ./obj_dir
VSRC = ./vsrc
OBJ_DIR = $(BUILD_DIR)/obj_dir
BIN = $(BUILD_DIR)/$(TOP_NAME)

NPC = $(NPC_HOME)/csrc/$(SIM_NAME).cpp
SIM = $(abspath ./vsrc/$(TOP_NAME).sv)

INCFLAGS = $(addprefix -I, $(INC_PATH))
CXXFLAGS += $(INCFLAGS) -DTOP_NAME="\"V$(TOP_NAME)\""

sim:
	$(call git_commit, "sim RTL")
	$(VERILATOR) $(SIM_CFLAGS) $(CFLAGS) $(SIM) \
		$(INCFLAGS) $(CSRCS) $(NPC) 
	$(MAKE) -C $(OBJ) -f VNPC.mk 
	$(OBJ)/V$(SIM_NAME) 

#default: $(BIN)

$(shell mkdir -p $(BUILD_DIR))
$(shell mkdir -p $(VSRC))

# constraint file
SRC_AUTO_BIND = $(abspath $(BUILD_DIR)/auto_bind.cpp)
$(SRC_AUTO_BIND): $(NXDC_FILES)
	python3 $(NVBOARD_HOME)/scripts/auto_pin_bind.py $^ $@

# project source
VSRCS = $(shell find $(abspath ./vsrc) -name "*.sv")
SSRCS = $(shell find $(abspath ./csrc) -name "*main.cpp")
SSRCS += $(SRC_AUTO_BIND)

# rules for NVBoard
include $(NVBOARD_HOME)/scripts/nvboard.mk

# Include rules for menuconfig
include $(NPC_HOME)/scripts/config.mk

# rules for verilator

$(BIN): $(VSRCS) $(SSRCS) $(NVBOARD_ARCHIVE)
	@rm -rf $(OBJ_DIR)
	$(VERILATOR) $(VERILATOR_CFLAGS) \
		--top-module $(TOP_NAME) $^ \
		$(addprefix -CFLAGS , $(CXXFLAGS)) $(addprefix -LDFLAGS , $(LDFLAGS)) \
		--Mdir $(OBJ_DIR) --exe -o $(abspath $(BIN))

all: default


test:
	mill -i $(PRJ).test

verilog:
	$(call git_commit, "generate verilog")
	mkdir -p $(BUILD_DIR)
	mill -i $(PRJ).runMain Elaborate --target-dir $(VSRC)

help:
	mill -i $(PRJ).runMain Elaborate --help

reformat:
	mill -i __.reformat

checkformat:
	mill -i __.checkFormat

run: $(BIN)
	@$^

wave:
	gtkwave waveform.vcd

clean:
	rm -rf $(BUILD_DIR)
	rm -rf $(OBJ)
	rm -rf $(VSRC)
	rm -f waveform.vcd

cleansim:
	rm -rf $(OBJ)

.PHONY:	default all	run test verilog help reformat checkformat clean sim wave cleansim

include ../Makefile
#include $(AM_HOME)/Makefile

