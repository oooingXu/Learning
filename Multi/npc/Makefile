# Include variables and rules generated by menuconfig
-include $(NPC_HOME)/include/config/auto.conf
-include $(NPC_HOME)/include/config/auto.conf.cmd

# Include rules for menuconfig
include $(NPC_HOME)/scripts/config.mk

# Include files for cpp or c
-include $(NPC_HOME)/scripts/build.mk

# rules for NVBoard
include $(NVBOARD_HOME)/scripts/nvboard.mk

TOP_NAME = ysyxSoCFull
CPU_NAME = ysyx_23060336
VERILATOR = verilator
PRJ = playground
NXDC_FILES = constr/top.nxdc
INC_PATH ?=

BUILD_DIR = ./build
OBJ = ./obj_dir
VSRC = ./vsrc
SOC_HOME = $(NPC_HOME)/../ysyxSoC
BIN = $(BUILD_DIR)/$(TOP_NAME)

default: $(BIN)

$(shell mkdir -p $(BUILD_DIR))

VERILATOR_CFLAGS += $(shell llvm-config --cflags) 
VERILATOR_CFLAGS += $(shell sdl2-config --cflags) 
VERILATOR_CFLAGS += -MMD --build --cc --trace-fst\
									 	-O3 --x-assign fast --x-initial fast\
									 	--exe -Wno-DECLFILENAME\
										--timescale "1ns/1ns" --no-timing\
										--assert --autoflush 

# constraint file
SRC_AUTO_BIND = $(abspath $(BUILD_DIR)/auto_bind.cpp)
$(SRC_AUTO_BIND): $(NXDC_FILES)
	python3 $(NVBOARD_HOME)/scripts/auto_pin_bind.py $^ $@

NPC = $(NPC_HOME)/csrc/$(CPU_NAME).cpp
VSRCS += $(SOC_HOME)/build/ysyxSoCFull.v
VSRCS += $(shell find $(SOC_HOME)/perip -name "*.v")
VSRCS += $(abspath $(NPC_HOME)/vsrc/$(CPU_NAME).sv)
CSRCS += $(SRC_AUTO_BIND)
CSRCS += $(NPC)

INVFLAGS += -I$(SOC_HOME)/perip/uart16550/rtl
INVFLAGS += -I$(SOC_HOME)/perip/spi/rtl

INCFLAGS = $(addprefix -I, $(INC_PATH))
CXXFLAGS += $(INCFLAGS) -DTOP_NAME="\"V$(TOP_NAME)\""

$(BIN): $(VSRCS) $(CSRCS) $(NVBOARD_ARCHIVE)
	@rm -rf $(OBJ)
	$(VERILATOR) $(VERILATOR_CFLAGS) \
		-top-module $(TOP_NAME) $^ \
	 	$(addprefix -CFLAGS , $(CXXFLAGS)) $(addprefix -LDFLAGS , $(LDFLAGS)) \
		$(INVFLAGS) --exe -o $(abspath $(BIN))

all: default

# rules for verilator
sim: $(BIN)
	$(call git_commit, "sim RTL")

test:
	mill -i $(PRJ).test

verilog:
	$(call git_commit, "generate verilog")
	mkdir -p $(BUILD_DIR)
	mkdir -p $(VSRC)
	mill -i $(PRJ).runMain Elaborate --target-dir $(VSRC)

help:
	mill -i $(PRJ).runMain Elaborate --help

reformat:
	mill -i __.reformat

checkformat:
	mill -i __.checkFormat

wave:
	gtkwave waveform.*

clean:
	rm -rf $(BUILD_DIR)
	rm -rf $(OBJ)
	rm -rf $(VSRC)
	rm -f waveform.*

cleansim:
	rm -rf $(OBJ)
	rm -rf $(BUILD_DIR)/$(TOP_NAME)

.PHONY:	default all	run test verilog help reformat checkformat clean sim wave cleansim

include ../Makefile

